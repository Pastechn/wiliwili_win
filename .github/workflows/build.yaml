name: Build wiliwili

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Push a new release'
        required: false
        default: 'false'
      version:
        description: 'Version'
        required: false
        default: '0.0.0'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.info.outputs.version }}
      standard_version: ${{ steps.info.outputs.standard_version }}
      DIST_EXE: ${{ steps.info.outputs.DIST_EXE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Debug version
        run: |
          export VERSION=`git rev-parse --short HEAD`
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Release version
        if: github.event.inputs.release == 'true' && github.event.inputs.release != 'false' && !cancelled()
        run: |
          export VERSION="${{ github.event.inputs.version }}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Version
        id: info
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "DIST_EXE=wiliwili-Windows-x64-${VERSION}" >> $GITHUB_OUTPUT
          echo $VERSION
          echo "${{  github.event.inputs.version }}"


  release:
    needs: [ build-win-x64, version ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
      - name: Upload Release
        if: github.event.inputs.release == 'true' && !cancelled()
        uses: ncipollo/release-action@v1
        with:
          name: wiliwili ${{  github.event.inputs.version }}
          tag: ${{  github.event.inputs.version }}
          omitBodyDuringUpdate: true
          body: This release is built by github-action.
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          artifacts: >
            ${{ needs.version.outputs.DIST_EXE }}/${{ needs.version.outputs.DIST_EXE }}.7z

  build-win-x64:
    needs: [ version ]
    runs-on: windows-2019
    env:
      MSYSTEM: MINGW64
      MSYS2_PATH_TYPE: inherit
    defaults:
      run:
        shell: C:\shells\msys2bash.cmd {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install dependency
        run: |
          pacman -S --needed --noconfirm --noprogressbar \
            ${MINGW_PACKAGE_PREFIX}-gcc \
            ${MINGW_PACKAGE_PREFIX}-ninja

          curl -LO https://github.com/xfangfang/wiliwili/releases/download/v0.1.0/${MINGW_PACKAGE_PREFIX}-mpv-0.36.0-3-any.pkg.tar.zst
          pacman -U --noconfirm *.pkg.tar.zst
      - name: Update gamepad db
        run: |
          BRLS_GLFW=library/borealis/library/lib/extern/glfw
          cmake -P ${BRLS_GLFW}/CMake/GenerateMappings.cmake ${BRLS_GLFW}/src/mappings.h.in ${BRLS_GLFW}/src/mappings.h
      - name: Build dependency
        run: |
          curl -sL https://github.com/webmproject/libwebp/archive/v1.3.1.tar.gz | tar zxf - -C /tmp
          cd /tmp/libwebp-1.3.1
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
            -DBUILD_SHARED_LIBS=OFF \
            -DWEBP_BUILD_ANIM_UTILS=OFF \
            -DWEBP_BUILD_CWEBP=OFF \
            -DWEBP_BUILD_DWEBP=OFF \
            -DWEBP_BUILD_GIF2WEBP=OFF \
            -DWEBP_BUILD_IMG2WEBP=OFF \
            -DWEBP_BUILD_VWEBP=OFF \
            -DWEBP_BUILD_WEBPINFO=OFF \
            -DWEBP_BUILD_WEBPMUX=OFF \
            -DWEBP_BUILD_LIBWEBPMUX=OFF \
            -DWEBP_BUILD_EXTRAS=OFF
          cmake --build build
          cmake --install build
      - name: Build
        run: |
          sed -i 's/GLFW_KEY_UP/GLFW_KEY_W/g' ./library/borealis/library/lib/platforms/glfw/glfw_input.cpp
          sed -i 's/GLFW_KEY_DOWN/GLFW_KEY_S/g' ./library/borealis/library/lib/platforms/glfw/glfw_input.cpp
          sed -i 's/GLFW_KEY_LEFT/GLFW_KEY_A/g' ./library/borealis/library/lib/platforms/glfw/glfw_input.cpp
          sed -i 's/GLFW_KEY_RIGHT/GLFW_KEY_D/g' ./library/borealis/library/lib/platforms/glfw/glfw_input.cpp
          sed -i 's/GLFW_KEY_L/GLFW_KEY_LEFT/g' ./library/borealis/library/lib/platforms/glfw/glfw_input.cpp
          sed -i 's/GLFW_KEY_R/GLFW_KEY_RIGHT/g' ./library/borealis/library/lib/platforms/glfw/glfw_input.cpp
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DPLATFORM_DESKTOP=ON \
            -DWIN32_TERMINAL=OFF \
            -DCURL_DISABLE_PROGRESS_METER=ON \
            -DUSE_LIBIDN2=OFF \
            -DUSE_WIN32_IDN=ON \
            -DCURL_USE_LIBSSH2=OFF \
            -DCURL_USE_LIBPSL=OFF \
            -DZLIB_USE_STATIC_LIBS=ON
          cmake --build build
          cd build

          strip wiliwili.exe
          7z a -mx=9 ../${{ needs.version.outputs.DIST_EXE }}.7z wiliwili.exe resources ${MINGW_PREFIX}/bin/libmpv-2.dll

      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.version.outputs.DIST_EXE }}
          path: "${{ needs.version.outputs.DIST_EXE }}.7z"
          
